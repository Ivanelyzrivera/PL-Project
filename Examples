CreateVM{
name: string
region: string
server: string
OS: string or integer
}

###
#Create a New Droplet
#To create a new Droplet, send a POST request to /v2/droplets setting the required attributes.
#A Droplet will be created using the provided information. The response body will contain a JSON object with a key called droplet.
#The value will be an object containing the standard attributes for your new Droplet. The response code, 202 Accepted, does not indicate the success or failure of the operation, just that the request has been accepted for processing. The actions returned as part of the response's links object can be used to check the status of the Droplet create event.
#
#Create Multiple Droplets
#Creating multiple Droplets is very similar to creating a single Droplet. Instead of sending name as a string, send names as an array of strings. A Droplet will be created for each name you send using the associated information. Up to ten Droplets may be created this way at a time.
#Rather than returning a single Droplet, the response body will contain a JSON array with a key called droplets.
#This will be set to an array of JSON objects, each of which will contain the standard Droplet attributes.
#The response code, 202 Accepted, does not indicate the success or failure of any operation, just that the request has been accepted for processing.
#The array of actions returned as part of the response's links object can be used to check the status of each individual Droplet create event.

#info https://docs.digitalocean.com/reference/api/api-reference/#operation/create_droplet


DeleteVM{
id: integer
tags: string
}

###
#To delete a Droplet, send a DELETE request to /v2/droplets/$DROPLET_ID.
#A successful request will receive a 204 status code with no body in response. This indicates that the request was processed successfully.
#To delete all Droplets assigned to a specific tag, include the tag_name query parameter set to the name of the tag in your DELETE request.
#For example, /v2/droplets?tag_name=$TAG_NAME.

ShowVM{
id: integer
tags: string
}

###
#ShowVM puede tener una de dos expresiones o nulo
#id | tag_name filtra por el id o el tag_name (solo uno de los dos. tag_name borra todos los VMs con ese tag_name)
#nulo da una lista de todos los VM disponibles
