
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARITY ASSIGN CHARACTER COMMA CONS CONSQ DIGIT DIVIDE ELSE EMPTY EMPTYQ EQ FALSE FIRST FUNQ GEQ GT ID IF IN LB LEQ LET LISTQ LP LT MAP MINUS NAME NEQ NUMQ OR OS PLUS RB REGION REST RP SC SERVER TAG THEN TILDE TIMES TO TRUEexplist  : propexplist\n                | emptypropexplist  : exp\n                    | exp COMMA propexplistexp  : term\n            | term binop exp\n            | IF exp THEN exp ELSE exp\n            | LET def IN exp\n            | MAP idlist TO expterm : unop term\n            | factor\n            | factor LP explist RP\n            | empty\n            | int\n            | string\n            | boolfactor   : LP exp RP\n                | prim\n                | iddef  : id ASSIGN exp SC\n            | id ASSIGN exp SC defidlist   : propidlist\n                | emptypropidlist   : id\n                    | id COMMA propidlistbool : TRUE\n            | FALSEunop : sign\n            | TILDE binop    : sign\n                | TIMES\n                | DIVIDE\n                | EQ\n                | NEQ\n                | LT\n                | GT\n                | LEQ\n                | GEQ\n                | AND\n                | OR sign : PLUS\n            | MINUS prim : NUMQ\n            | FUNQ\n            | LISTQ\n            | EMPTYQ\n            | CONSQ\n            | CONS\n            | FIRST\n            | REST\n            | ARITYid   : type\n            | type int\n            | type stringtype :\n            | NAME\n            | REGION\n            | SERVER\n            | OS\n            | ID\n            | TAGint  : DIGIT\n            | DIGIT intstring  : CHARACTER\n               | CHARACTER stringempty    :\n                | EMPTY'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,66,67,68,69,70,71,73,75,78,80,82,84,85,87,],[-55,0,-1,-2,-3,-67,-5,-55,-11,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-63,-65,-53,-54,-4,-6,-55,-55,-17,-8,-9,-12,-55,-7,]),'TIMES':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,45,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'DIVIDE':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,46,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'EQ':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,47,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'NEQ':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,48,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'LT':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,49,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'GT':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,50,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'LEQ':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,51,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'GEQ':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,52,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'AND':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,53,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'OR':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[-55,-13,-67,54,-55,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,-63,-65,-53,-54,-55,-55,-55,-55,-17,-12,-55,]),'PLUS':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[24,-13,-67,24,24,24,-11,24,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,24,24,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,24,-63,-65,-53,-54,24,24,24,24,-17,-12,24,]),'MINUS':([0,3,5,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,66,67,68,69,72,73,74,75,78,84,85,],[25,-13,-67,25,25,25,-11,25,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,25,25,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,25,-63,-65,-53,-54,25,25,25,25,-17,-12,25,]),'COMMA':([0,3,4,5,6,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,62,63,64,66,67,68,69,71,73,75,76,78,80,82,84,85,87,],[-55,-13,42,-67,-5,-55,-55,-11,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,76,-10,-55,-63,-65,-53,-54,-6,-55,-55,-55,-17,-8,-9,-12,-55,-7,]),'EMPTY':([0,7,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[5,5,5,5,5,-28,-29,-41,-42,5,5,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,5,5,5,5,5,5,]),'IF':([0,7,12,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[7,7,7,-41,-42,7,7,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,7,7,7,7,7,7,]),'LET':([0,7,12,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[8,8,8,-41,-42,8,8,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,8,8,8,8,8,8,]),'MAP':([0,7,12,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[9,9,9,-41,-42,9,9,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,9,9,9,9,9,9,]),'TILDE':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[17,17,17,17,-28,-29,-41,-42,17,17,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,17,17,17,17,17,17,]),'LP':([0,7,10,11,12,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,64,66,67,68,69,72,73,74,75,78,85,],[12,12,12,64,12,-28,-29,-18,-19,-62,-64,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,12,12,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,12,-63,-65,-53,-54,12,12,12,12,-17,12,]),'DIGIT':([0,7,8,9,10,12,16,17,20,24,25,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[20,20,-55,-55,20,20,-28,-29,20,-41,-42,20,-56,-57,-58,-59,-60,-61,20,20,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,20,20,20,20,20,-55,20,-55,]),'CHARACTER':([0,7,8,9,10,12,16,17,21,24,25,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[21,21,-55,-55,21,21,-28,-29,21,-41,-42,21,-56,-57,-58,-59,-60,-61,21,21,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,21,21,21,21,21,-55,21,-55,]),'TRUE':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[22,22,22,22,-28,-29,-41,-42,22,22,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,22,22,22,22,22,22,]),'FALSE':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[23,23,23,23,-28,-29,-41,-42,23,23,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,23,23,23,23,23,23,]),'NUMQ':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[26,26,26,26,-28,-29,-41,-42,26,26,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,26,26,26,26,26,26,]),'FUNQ':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[27,27,27,27,-28,-29,-41,-42,27,27,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,27,27,27,27,27,27,]),'LISTQ':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[28,28,28,28,-28,-29,-41,-42,28,28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,28,28,28,28,28,28,]),'EMPTYQ':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[29,29,29,29,-28,-29,-41,-42,29,29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,29,29,29,29,29,29,]),'CONSQ':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[30,30,30,30,-28,-29,-41,-42,30,30,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,30,30,30,30,30,30,]),'CONS':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[31,31,31,31,-28,-29,-41,-42,31,31,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,31,31,31,31,31,31,]),'FIRST':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[32,32,32,32,-28,-29,-41,-42,32,32,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,32,32,32,32,32,32,]),'REST':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[33,33,33,33,-28,-29,-41,-42,33,33,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,33,33,33,33,33,33,]),'ARITY':([0,7,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,85,],[34,34,34,34,-28,-29,-41,-42,34,34,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,34,34,34,34,34,34,]),'NAME':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[36,36,36,36,36,36,-28,-29,-41,-42,36,36,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,36,36,36,36,36,36,36,36,]),'REGION':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[37,37,37,37,37,37,-28,-29,-41,-42,37,37,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,37,37,37,37,37,37,37,37,]),'SERVER':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[38,38,38,38,38,38,-28,-29,-41,-42,38,38,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,38,38,38,38,38,38,38,38,]),'OS':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[39,39,39,39,39,39,-28,-29,-41,-42,39,39,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,39,39,39,39,39,39,39,39,]),'ID':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[40,40,40,40,40,40,-28,-29,-41,-42,40,40,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,40,40,40,40,40,40,40,40,]),'TAG':([0,7,8,9,10,12,16,17,24,25,42,43,44,45,46,47,48,49,50,51,52,53,54,64,72,73,74,75,76,85,86,],[41,41,41,41,41,41,-28,-29,-41,-42,41,41,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,41,41,41,41,41,41,41,41,]),'RP':([2,3,4,5,6,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,63,64,65,66,67,68,69,70,71,73,75,77,78,80,82,84,85,87,],[-1,-2,-3,-67,-5,-55,-11,-55,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-55,78,-63,-65,-53,-54,-4,-6,-55,-55,84,-17,-8,-9,-12,-55,-7,]),'THEN':([5,6,7,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,63,66,67,68,69,71,73,75,78,80,82,84,85,87,],[-67,-5,-55,-55,-11,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,72,-13,-10,-63,-65,-53,-54,-6,-55,-55,-17,-8,-9,-12,-55,-7,]),'TO':([5,9,20,21,35,36,37,38,39,40,41,59,60,61,62,66,67,68,69,76,83,],[-67,-55,-62,-64,-52,-56,-57,-58,-59,-60,-61,75,-22,-23,-24,-63,-65,-53,-54,-55,-25,]),'ELSE':([5,6,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,63,66,67,68,69,71,72,73,75,78,79,80,82,84,85,87,],[-67,-5,-55,-11,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-63,-65,-53,-54,-6,-55,-55,-55,-17,85,-8,-9,-12,-55,-7,]),'SC':([5,6,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,63,66,67,68,69,71,73,74,75,78,80,81,82,84,85,87,],[-67,-5,-55,-11,-14,-15,-16,-28,-29,-18,-19,-62,-64,-26,-27,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-56,-57,-58,-59,-60,-61,-55,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-13,-10,-63,-65,-53,-54,-6,-55,-55,-55,-17,-8,86,-9,-12,-55,-7,]),'ASSIGN':([8,20,21,35,36,37,38,39,40,41,58,66,67,68,69,86,],[-55,-62,-64,-52,-56,-57,-58,-59,-60,-61,74,-63,-65,-53,-54,-55,]),'IN':([57,86,88,],[73,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'explist':([0,64,],[1,77,]),'propexplist':([0,42,64,],[2,70,2,]),'empty':([0,7,9,10,12,42,43,64,72,73,74,75,85,],[3,56,61,56,56,56,56,3,56,56,56,56,56,]),'exp':([0,7,12,42,43,64,72,73,74,75,85,],[4,55,65,4,71,4,79,80,81,82,87,]),'term':([0,7,10,12,42,43,64,72,73,74,75,85,],[6,6,63,6,6,6,6,6,6,6,6,6,]),'unop':([0,7,10,12,42,43,64,72,73,74,75,85,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'factor':([0,7,10,12,42,43,64,72,73,74,75,85,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'int':([0,7,10,12,20,35,42,43,64,72,73,74,75,85,],[13,13,13,13,66,68,13,13,13,13,13,13,13,13,]),'string':([0,7,10,12,21,35,42,43,64,72,73,74,75,85,],[14,14,14,14,67,69,14,14,14,14,14,14,14,14,]),'bool':([0,7,10,12,42,43,64,72,73,74,75,85,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'sign':([0,6,7,10,12,42,43,64,72,73,74,75,85,],[16,44,16,16,16,16,16,16,16,16,16,16,16,]),'prim':([0,7,10,12,42,43,64,72,73,74,75,85,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'id':([0,7,8,9,10,12,42,43,64,72,73,74,75,76,85,86,],[19,19,58,62,19,19,19,19,19,19,19,19,19,62,19,58,]),'type':([0,7,8,9,10,12,42,43,64,72,73,74,75,76,85,86,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'binop':([6,],[43,]),'def':([8,86,],[57,88,]),'idlist':([9,],[59,]),'propidlist':([9,76,],[60,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> explist","S'",1,None,None,None),
  ('explist -> propexplist','explist',1,'p_explist','syntax.py',10),
  ('explist -> empty','explist',1,'p_explist','syntax.py',11),
  ('propexplist -> exp','propexplist',1,'p_propexplist','syntax.py',15),
  ('propexplist -> exp COMMA propexplist','propexplist',3,'p_propexplist','syntax.py',16),
  ('exp -> term','exp',1,'p_exp','syntax.py',20),
  ('exp -> term binop exp','exp',3,'p_exp','syntax.py',21),
  ('exp -> IF exp THEN exp ELSE exp','exp',6,'p_exp','syntax.py',22),
  ('exp -> LET def IN exp','exp',4,'p_exp','syntax.py',23),
  ('exp -> MAP idlist TO exp','exp',4,'p_exp','syntax.py',24),
  ('term -> unop term','term',2,'p_term','syntax.py',28),
  ('term -> factor','term',1,'p_term','syntax.py',29),
  ('term -> factor LP explist RP','term',4,'p_term','syntax.py',30),
  ('term -> empty','term',1,'p_term','syntax.py',31),
  ('term -> int','term',1,'p_term','syntax.py',32),
  ('term -> string','term',1,'p_term','syntax.py',33),
  ('term -> bool','term',1,'p_term','syntax.py',34),
  ('factor -> LP exp RP','factor',3,'p_factor','syntax.py',38),
  ('factor -> prim','factor',1,'p_factor','syntax.py',39),
  ('factor -> id','factor',1,'p_factor','syntax.py',40),
  ('def -> id ASSIGN exp SC','def',4,'p_def','syntax.py',44),
  ('def -> id ASSIGN exp SC def','def',5,'p_def','syntax.py',45),
  ('idlist -> propidlist','idlist',1,'p_idlist','syntax.py',49),
  ('idlist -> empty','idlist',1,'p_idlist','syntax.py',50),
  ('propidlist -> id','propidlist',1,'p_propidlist','syntax.py',54),
  ('propidlist -> id COMMA propidlist','propidlist',3,'p_propidlist','syntax.py',55),
  ('bool -> TRUE','bool',1,'p_bool','syntax.py',59),
  ('bool -> FALSE','bool',1,'p_bool','syntax.py',60),
  ('unop -> sign','unop',1,'p_unop','syntax.py',64),
  ('unop -> TILDE','unop',1,'p_unop','syntax.py',65),
  ('binop -> sign','binop',1,'p_binop','syntax.py',69),
  ('binop -> TIMES','binop',1,'p_binop','syntax.py',70),
  ('binop -> DIVIDE','binop',1,'p_binop','syntax.py',71),
  ('binop -> EQ','binop',1,'p_binop','syntax.py',72),
  ('binop -> NEQ','binop',1,'p_binop','syntax.py',73),
  ('binop -> LT','binop',1,'p_binop','syntax.py',74),
  ('binop -> GT','binop',1,'p_binop','syntax.py',75),
  ('binop -> LEQ','binop',1,'p_binop','syntax.py',76),
  ('binop -> GEQ','binop',1,'p_binop','syntax.py',77),
  ('binop -> AND','binop',1,'p_binop','syntax.py',78),
  ('binop -> OR','binop',1,'p_binop','syntax.py',79),
  ('sign -> PLUS','sign',1,'p_sign','syntax.py',83),
  ('sign -> MINUS','sign',1,'p_sign','syntax.py',84),
  ('prim -> NUMQ','prim',1,'p_prim','syntax.py',88),
  ('prim -> FUNQ','prim',1,'p_prim','syntax.py',89),
  ('prim -> LISTQ','prim',1,'p_prim','syntax.py',90),
  ('prim -> EMPTYQ','prim',1,'p_prim','syntax.py',91),
  ('prim -> CONSQ','prim',1,'p_prim','syntax.py',92),
  ('prim -> CONS','prim',1,'p_prim','syntax.py',93),
  ('prim -> FIRST','prim',1,'p_prim','syntax.py',94),
  ('prim -> REST','prim',1,'p_prim','syntax.py',95),
  ('prim -> ARITY','prim',1,'p_prim','syntax.py',96),
  ('id -> type','id',1,'p_id','syntax.py',100),
  ('id -> type int','id',2,'p_id','syntax.py',101),
  ('id -> type string','id',2,'p_id','syntax.py',102),
  ('type -> <empty>','type',0,'p_type','syntax.py',106),
  ('type -> NAME','type',1,'p_type','syntax.py',107),
  ('type -> REGION','type',1,'p_type','syntax.py',108),
  ('type -> SERVER','type',1,'p_type','syntax.py',109),
  ('type -> OS','type',1,'p_type','syntax.py',110),
  ('type -> ID','type',1,'p_type','syntax.py',111),
  ('type -> TAG','type',1,'p_type','syntax.py',112),
  ('int -> DIGIT','int',1,'p_int','syntax.py',121),
  ('int -> DIGIT int','int',2,'p_int','syntax.py',122),
  ('string -> CHARACTER','string',1,'p_string','syntax.py',126),
  ('string -> CHARACTER string','string',2,'p_string','syntax.py',127),
  ('empty -> <empty>','empty',0,'p_empty','syntax.py',131),
  ('empty -> EMPTY','empty',1,'p_empty','syntax.py',132),
]
