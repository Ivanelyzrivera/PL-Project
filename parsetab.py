
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN CHARACTER COMMA CONS DIGIT DIVIDE ELSE EQ FALSE GEQ GT IF IN LB LEQ LET LP LT MINUS NEQ OR PLUS RB RP THEN TILDE TIMES TO TRUEexplist  : propexplistpropexplist  : exp\n                    | exp COMMA propexplistexp  : term\n            | term binop exp\n            | IF exp THEN exp ELSE expterm : unop term\n            | factor\n            | factor LP explist RP\n            | int\n            | string\n            | boolfactor   : LP exp RP\n                | iddef  : id ASSIGN exp\n            | id ASSIGN exp defpropidlist   : id\n                    | id COMMA propidlistbool : TRUE\n            | FALSEunop : sign binop    : sign\n                | TIMES\n                | DIVIDE\n                | EQ\n                | NEQ\n                | LT\n                | GT\n                | LEQ\n                | GEQ\n                | AND\n                | OR sign : PLUS\n            | MINUS id   :\n            | int\n            | stringint  : DIGIT\n            | DIGIT intstring  : CHARACTER\n               | CHARACTER string'
    
_lr_action_items = {'IF':([0,5,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,41,46,],[5,5,5,-33,-34,5,5,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,5,5,5,]),'LP':([0,5,6,7,8,9,10,12,13,14,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,38,41,43,46,],[8,8,8,35,8,-36,-37,-21,-14,-38,-40,-33,-34,8,8,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,8,-39,-41,8,-13,8,]),'DIGIT':([0,5,6,8,12,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,41,46,],[14,14,14,14,-21,14,-33,-34,14,14,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,14,14,14,]),'CHARACTER':([0,5,6,8,12,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,41,46,],[15,15,15,15,-21,15,-33,-34,15,15,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,15,15,15,]),'TRUE':([0,5,6,8,12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,41,46,],[16,16,16,16,-21,-33,-34,16,16,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,16,16,16,]),'FALSE':([0,5,6,8,12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,41,46,],[17,17,17,17,-21,-33,-34,17,17,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,17,17,17,]),'PLUS':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[18,18,18,18,-8,18,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,18,18,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,18,-39,-41,18,-13,-9,18,]),'MINUS':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[19,19,19,19,-8,19,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,19,19,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,19,-39,-41,19,-13,-9,19,]),'TIMES':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,23,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'DIVIDE':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,24,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'EQ':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,25,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'NEQ':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,26,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'LT':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,27,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'GT':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,28,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'LEQ':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,29,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'GEQ':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,30,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'AND':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,31,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'OR':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,41,43,45,46,],[-35,32,-35,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-35,-13,-9,-35,]),'COMMA':([0,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37,38,40,43,45,46,47,],[-35,20,-4,-35,-8,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,-39,-41,-5,-13,-9,-35,-6,]),'$end':([0,1,2,3,4,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,37,38,39,40,43,45,46,47,],[-35,0,-1,-2,-4,-35,-8,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-39,-41,-3,-5,-13,-9,-35,-6,]),'RP':([2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,42,43,45,46,47,],[-1,-2,-4,-35,-8,-35,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-35,43,-39,-41,-3,-5,45,-13,-9,-35,-6,]),'THEN':([4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,40,43,45,46,47,],[-4,-35,-35,-8,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,41,-7,-39,-41,-5,-13,-9,-35,-6,]),'ELSE':([4,6,7,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,34,37,38,40,41,43,44,45,46,47,],[-4,-35,-8,-10,-11,-12,-21,-14,-38,-40,-19,-20,-33,-34,-35,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-7,-39,-41,-5,-35,-13,46,-9,-35,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'explist':([0,35,],[1,42,]),'propexplist':([0,20,35,],[2,39,2,]),'exp':([0,5,8,20,21,35,41,46,],[3,33,36,3,40,3,44,47,]),'term':([0,5,6,8,20,21,35,41,46,],[4,4,34,4,4,4,4,4,4,]),'unop':([0,5,6,8,20,21,35,41,46,],[6,6,6,6,6,6,6,6,6,]),'factor':([0,5,6,8,20,21,35,41,46,],[7,7,7,7,7,7,7,7,7,]),'int':([0,5,6,8,14,20,21,35,41,46,],[9,9,9,9,37,9,9,9,9,9,]),'string':([0,5,6,8,15,20,21,35,41,46,],[10,10,10,10,38,10,10,10,10,10,]),'bool':([0,5,6,8,20,21,35,41,46,],[11,11,11,11,11,11,11,11,11,]),'sign':([0,4,5,6,8,20,21,35,41,46,],[12,22,12,12,12,12,12,12,12,12,]),'id':([0,5,6,8,20,21,35,41,46,],[13,13,13,13,13,13,13,13,13,]),'binop':([4,],[21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> explist","S'",1,None,None,None),
  ('explist -> propexplist','explist',1,'p_explist','syntax.py',10),
  ('propexplist -> exp','propexplist',1,'p_propexplist','syntax.py',14),
  ('propexplist -> exp COMMA propexplist','propexplist',3,'p_propexplist','syntax.py',15),
  ('exp -> term','exp',1,'p_exp','syntax.py',19),
  ('exp -> term binop exp','exp',3,'p_exp','syntax.py',20),
  ('exp -> IF exp THEN exp ELSE exp','exp',6,'p_exp','syntax.py',21),
  ('term -> unop term','term',2,'p_term','syntax.py',25),
  ('term -> factor','term',1,'p_term','syntax.py',26),
  ('term -> factor LP explist RP','term',4,'p_term','syntax.py',27),
  ('term -> int','term',1,'p_term','syntax.py',28),
  ('term -> string','term',1,'p_term','syntax.py',29),
  ('term -> bool','term',1,'p_term','syntax.py',30),
  ('factor -> LP exp RP','factor',3,'p_factor','syntax.py',34),
  ('factor -> id','factor',1,'p_factor','syntax.py',35),
  ('def -> id ASSIGN exp','def',3,'p_def','syntax.py',39),
  ('def -> id ASSIGN exp def','def',4,'p_def','syntax.py',40),
  ('propidlist -> id','propidlist',1,'p_propidlist','syntax.py',44),
  ('propidlist -> id COMMA propidlist','propidlist',3,'p_propidlist','syntax.py',45),
  ('bool -> TRUE','bool',1,'p_bool','syntax.py',49),
  ('bool -> FALSE','bool',1,'p_bool','syntax.py',50),
  ('unop -> sign','unop',1,'p_unop','syntax.py',54),
  ('binop -> sign','binop',1,'p_binop','syntax.py',58),
  ('binop -> TIMES','binop',1,'p_binop','syntax.py',59),
  ('binop -> DIVIDE','binop',1,'p_binop','syntax.py',60),
  ('binop -> EQ','binop',1,'p_binop','syntax.py',61),
  ('binop -> NEQ','binop',1,'p_binop','syntax.py',62),
  ('binop -> LT','binop',1,'p_binop','syntax.py',63),
  ('binop -> GT','binop',1,'p_binop','syntax.py',64),
  ('binop -> LEQ','binop',1,'p_binop','syntax.py',65),
  ('binop -> GEQ','binop',1,'p_binop','syntax.py',66),
  ('binop -> AND','binop',1,'p_binop','syntax.py',67),
  ('binop -> OR','binop',1,'p_binop','syntax.py',68),
  ('sign -> PLUS','sign',1,'p_sign','syntax.py',72),
  ('sign -> MINUS','sign',1,'p_sign','syntax.py',73),
  ('id -> <empty>','id',0,'p_id','syntax.py',77),
  ('id -> int','id',1,'p_id','syntax.py',78),
  ('id -> string','id',1,'p_id','syntax.py',79),
  ('int -> DIGIT','int',1,'p_int','syntax.py',82),
  ('int -> DIGIT int','int',2,'p_int','syntax.py',83),
  ('string -> CHARACTER','string',1,'p_string','syntax.py',87),
  ('string -> CHARACTER string','string',2,'p_string','syntax.py',88),
]
